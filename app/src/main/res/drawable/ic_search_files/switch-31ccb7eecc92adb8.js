(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[72318],{6955:(e,t,o)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/switch",function(){return o(57588)}])},14719:e=>{"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"checked":{"description":"If <code>true</code>, the component is checked."},"checkedIcon":{"description":"The icon to display when the component is checked."},"classes":{"description":"Override or extend the styles applied to the component."},"color":{"description":"The color of the component. It supports both default and custom theme colors, which can be added as shown in the <a href=\\"https://mui.com/material-ui/customization/palette/#custom-colors\\">palette customization guide</a>."},"defaultChecked":{"description":"The default checked state. Use when the component is not controlled."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableRipple":{"description":"If <code>true</code>, the ripple effect is disabled."},"edge":{"description":"If given, uses a negative margin to counteract the padding on one side (this is often helpful for aligning the left or right side of the icon with content above or below, without ruining the border size and shape)."},"icon":{"description":"The icon to display when the component is unchecked."},"id":{"description":"The id of the <code>input</code> element."},"inputProps":{"description":"<a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes\\">Attributes</a> applied to the <code>input</code> element."},"inputRef":{"description":"Pass a ref to the <code>input</code> element."},"onChange":{"description":"Callback fired when the state is changed.","typeDescriptions":{"event":"The event source of the callback. You can pull out the new value by accessing <code>event.target.value</code> (string). You can pull out the new checked state by accessing <code>event.target.checked</code> (boolean)."}},"required":{"description":"If <code>true</code>, the <code>input</code> element is required."},"size":{"description":"The size of the component. <code>small</code> is equivalent to the dense switch styling."},"slotProps":{"description":"The props used for each slot inside."},"slots":{"description":"The components used for each slot inside."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"The value of the component. The DOM API casts this to a string. The browser uses &quot;on&quot; as the default value."}},"classDescriptions":{"checked":{"description":"State class applied to {{nodeName}}.","nodeName":"the internal <code>SwitchBase</code> component&#39;s <code>checked</code> class"},"colorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the internal SwitchBase component&#39;s root element","conditions":"<code>color=\\"primary\\"</code>"},"colorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the internal SwitchBase component&#39;s root element","conditions":"<code>color=\\"secondary\\"</code>"},"disabled":{"description":"State class applied to {{nodeName}}.","nodeName":"the internal SwitchBase component&#39;s disabled class"},"edgeEnd":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>edge=\\"end\\"</code>"},"edgeStart":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>edge=\\"start\\"</code>"},"sizeMedium":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"medium\\"</code>"},"sizeSmall":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>size=\\"small\\"</code>"}},"slotDescriptions":{"input":"The component that renders the switchBase&#39;s input slot.","root":"The component that renders the root slot.","switchBase":"The component that renders the switchBase slot.","thumb":"The component that renders the thumb slot.","track":"The component that renders the track slot."}}')},57588:(e,t,o)=>{"use strict";o.r(t),o.d(t,{default:()=>c}),o(65014);var i=o(10536),n=o(35479);let s=JSON.parse('{"props":{"checked":{"type":{"name":"bool"}},"checkedIcon":{"type":{"name":"node"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"color":{"type":{"name":"union","description":"\'default\'<br>&#124;&nbsp;\'primary\'<br>&#124;&nbsp;\'secondary\'<br>&#124;&nbsp;\'error\'<br>&#124;&nbsp;\'info\'<br>&#124;&nbsp;\'success\'<br>&#124;&nbsp;\'warning\'<br>&#124;&nbsp;string"},"default":"\'primary\'"},"defaultChecked":{"type":{"name":"bool"}},"disabled":{"type":{"name":"bool"}},"disableRipple":{"type":{"name":"bool"},"default":"false"},"edge":{"type":{"name":"enum","description":"\'end\'<br>&#124;&nbsp;\'start\'<br>&#124;&nbsp;false"},"default":"false"},"icon":{"type":{"name":"node"}},"id":{"type":{"name":"string"}},"inputProps":{"type":{"name":"object"},"deprecated":true,"deprecationInfo":"Use <code>slotProps.input</code> instead. This prop will be removed in a future major release. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"inputRef":{"type":{"name":"custom","description":"ref"},"deprecated":true,"deprecationInfo":"Use <code>slotProps.input.ref</code> instead. This prop will be removed in a future major release. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details."},"onChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.ChangeEvent<HTMLInputElement>) => void","describedArgs":["event"]}},"required":{"type":{"name":"bool"},"default":"false"},"size":{"type":{"name":"union","description":"\'medium\'<br>&#124;&nbsp;\'small\'<br>&#124;&nbsp;string"},"default":"\'medium\'"},"slotProps":{"type":{"name":"shape","description":"{ input?: func<br>&#124;&nbsp;object, root?: func<br>&#124;&nbsp;object, switchBase?: func<br>&#124;&nbsp;object, thumb?: func<br>&#124;&nbsp;object, track?: func<br>&#124;&nbsp;object }"},"default":"{}"},"slots":{"type":{"name":"shape","description":"{ input?: elementType, root?: elementType, switchBase?: elementType, thumb?: elementType, track?: elementType }"},"default":"{}"},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"any"}}},"name":"Switch","imports":["import Switch from \'@mui/material/Switch\';","import { Switch } from \'@mui/material\';"],"slots":[{"name":"root","description":"The component that renders the root slot.","default":"\'span\'","class":"MuiSwitch-root"},{"name":"track","description":"The component that renders the track slot.","default":"\'span\'","class":"MuiSwitch-track"},{"name":"thumb","description":"The component that renders the thumb slot.","default":"\'span\'","class":"MuiSwitch-thumb"},{"name":"switchBase","description":"The component that renders the switchBase slot.","default":"SwitchBase","class":"MuiSwitch-switchBase"},{"name":"input","description":"The component that renders the switchBase\'s input slot.","default":"SwitchBaseInput","class":"MuiSwitch-input"}],"classes":[{"key":"checked","className":"Mui-checked","description":"State class applied to the internal `SwitchBase` component\'s `checked` class.","isGlobal":true},{"key":"colorPrimary","className":"MuiSwitch-colorPrimary","description":"Styles applied to the internal SwitchBase component\'s root element if `color=\\"primary\\"`.","isGlobal":false},{"key":"colorSecondary","className":"MuiSwitch-colorSecondary","description":"Styles applied to the internal SwitchBase component\'s root element if `color=\\"secondary\\"`.","isGlobal":false},{"key":"disabled","className":"Mui-disabled","description":"State class applied to the internal SwitchBase component\'s disabled class.","isGlobal":true},{"key":"edgeEnd","className":"MuiSwitch-edgeEnd","description":"Styles applied to the root element if `edge=\\"end\\"`.","isGlobal":false},{"key":"edgeStart","className":"MuiSwitch-edgeStart","description":"Styles applied to the root element if `edge=\\"start\\"`.","isGlobal":false},{"key":"sizeMedium","className":"MuiSwitch-sizeMedium","description":"Styles applied to the root element if `size=\\"medium\\"`.","isGlobal":false},{"key":"sizeSmall","className":"MuiSwitch-sizeSmall","description":"Styles applied to the root element if `size=\\"small\\"`.","isGlobal":false}],"spread":true,"themeDefaultProps":false,"muiName":"MuiSwitch","forwardsRefTo":"HTMLSpanElement","filename":"/packages/mui-material/src/Switch/Switch.js","inheritance":{"component":"IconButton","pathname":"/material-ui/api/icon-button/"},"demos":"<ul><li><a href=\\"/material-ui/react-switch/\\">Switch</a></li>\\n<li><a href=\\"/material-ui/react-transfer-list/\\">Transfer List</a></li></ul>","cssComponent":false}');var a=o(21814);function c(e){var t=e.descriptions,o=e.pageContent;return(0,a.jsx)(i.A,{descriptions:t,pageContent:o})}c.getInitialProps=function(){var e=o(73705);return{descriptions:(0,n.A)(e),pageContent:s}}},73705:(e,t,o)=>{var i={"./switch.json":14719};function n(e){return o(s(e))}function s(e){if(!o.o(i,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}n.keys=function(){return Object.keys(i)},n.resolve=s,e.exports=n,n.id=73705}},e=>{var t=t=>e(e.s=t);e.O(0,[46593,32952,91506,29803,67770,94865,8049,11907,7548,4208,15148,99831,22621,42625,94672,78968,33343,86331,15034,10536,60,90636,38792],()=>t(6955)),_N_E=e.O()}]);