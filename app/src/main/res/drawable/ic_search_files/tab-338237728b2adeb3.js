(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[94579],{24273:(e,o,t)=>{"use strict";t.r(o),t.d(o,{default:()=>l}),t(65014);var i=t(10536),a=t(35479);let n=JSON.parse('{"props":{"children":{"type":{"name":"custom","description":"unsupportedProp"}},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"disabled":{"type":{"name":"bool"},"default":"false"},"disableFocusRipple":{"type":{"name":"bool"},"default":"false"},"disableRipple":{"type":{"name":"bool"},"default":"false"},"icon":{"type":{"name":"union","description":"element<br>&#124;&nbsp;string"}},"iconPosition":{"type":{"name":"enum","description":"\'bottom\'<br>&#124;&nbsp;\'end\'<br>&#124;&nbsp;\'start\'<br>&#124;&nbsp;\'top\'"},"default":"\'top\'"},"label":{"type":{"name":"node"}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}},"value":{"type":{"name":"any"}},"wrapped":{"type":{"name":"bool"},"default":"false"}},"name":"Tab","imports":["import Tab from \'@mui/material/Tab\';","import { Tab } from \'@mui/material\';"],"classes":[{"key":"disabled","className":"Mui-disabled","description":"State class applied to the root element if `disabled={true}` (controlled by the Tabs component).","isGlobal":true},{"key":"fullWidth","className":"MuiTab-fullWidth","description":"Styles applied to the root element if `fullWidth={true}` (controlled by the Tabs component).","isGlobal":false},{"key":"icon","className":"MuiTab-icon","description":"Styles applied to the `icon` HTML element if both `icon` and `label` are provided.","isGlobal":false},{"key":"iconWrapper","className":"MuiTab-iconWrapper","description":"Styles applied to the `icon` HTML element if both `icon` and `label` are provided.","isGlobal":false,"isDeprecated":true},{"key":"labelIcon","className":"MuiTab-labelIcon","description":"Styles applied to the root element if both `icon` and `label` are provided.","isGlobal":false},{"key":"root","className":"MuiTab-root","description":"Styles applied to the root element.","isGlobal":false},{"key":"selected","className":"Mui-selected","description":"State class applied to the root element if `selected={true}` (controlled by the Tabs component).","isGlobal":true},{"key":"textColorInherit","className":"MuiTab-textColorInherit","description":"Styles applied to the root element if the parent [`Tabs`](/material-ui/api/tabs/) has `textColor=\\"inherit\\"`.","isGlobal":false},{"key":"textColorPrimary","className":"MuiTab-textColorPrimary","description":"Styles applied to the root element if the parent [`Tabs`](/material-ui/api/tabs/) has `textColor=\\"primary\\"`.","isGlobal":false},{"key":"textColorSecondary","className":"MuiTab-textColorSecondary","description":"Styles applied to the root element if the parent [`Tabs`](/material-ui/api/tabs/) has `textColor=\\"secondary\\"`.","isGlobal":false},{"key":"wrapped","className":"MuiTab-wrapped","description":"Styles applied to the root element if `wrapped={true}`.","isGlobal":false}],"spread":true,"themeDefaultProps":true,"muiName":"MuiTab","forwardsRefTo":"HTMLButtonElement","filename":"/packages/mui-material/src/Tab/Tab.js","inheritance":{"component":"ButtonBase","pathname":"/material-ui/api/button-base/"},"demos":"<ul><li><a href=\\"/material-ui/react-tabs/\\">Tabs</a></li></ul>","cssComponent":false}');var s=t(21814);function l(e){var o=e.descriptions,t=e.pageContent;return(0,s.jsx)(i.A,{descriptions:o,pageContent:t})}l.getInitialProps=function(){var e=t(74873);return{descriptions:(0,a.A)(e),pageContent:n}}},74873:(e,o,t)=>{var i={"./tab.json":84086};function a(e){return t(n(e))}function n(e){if(!t.o(i,e)){var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return i[e]}a.keys=function(){return Object.keys(i)},a.resolve=n,e.exports=a,a.id=74873},75585:(e,o,t)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/material-ui/api/tab",function(){return t(24273)}])},84086:e=>{"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":{"description":"This prop isn&#39;t supported. Use the <code>component</code> prop if you need to change the children structure."},"classes":{"description":"Override or extend the styles applied to the component."},"disabled":{"description":"If <code>true</code>, the component is disabled."},"disableFocusRipple":{"description":"If <code>true</code>, the  keyboard focus ripple is disabled."},"disableRipple":{"description":"If <code>true</code>, the ripple effect is disabled.<br>⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure to highlight the element by applying separate styles with the <code>.Mui-focusVisible</code> class."},"icon":{"description":"The icon to display."},"iconPosition":{"description":"The position of the icon relative to the label."},"label":{"description":"The label element."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."},"value":{"description":"You can provide your own value. Otherwise, we fallback to the child position index."},"wrapped":{"description":"Tab labels appear in a single row. They can use a second line if needed."}},"classDescriptions":{"disabled":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>disabled={true}</code> (controlled by the Tabs component)"},"fullWidth":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>fullWidth={true}</code> (controlled by the Tabs component)"},"icon":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the <code>icon</code> HTML element","conditions":"both <code>icon</code> and <code>label</code> are provided"},"iconWrapper":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the <code>icon</code> HTML element","conditions":"both <code>icon</code> and <code>label</code> are provided","deprecationInfo":"Use <code>icon</code> class instead. See <a href=\\"/material-ui/migration/migrating-from-deprecated-apis/\\">Migrating from deprecated APIs</a> for more details"},"labelIcon":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"both <code>icon</code> and <code>label</code> are provided"},"root":{"description":"Styles applied to the root element."},"selected":{"description":"State class applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>selected={true}</code> (controlled by the Tabs component)"},"textColorInherit":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the parent <a href=\\"/material-ui/api/tabs/\\"><code>Tabs</code></a> has <code>textColor=\\"inherit\\"</code>"},"textColorPrimary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the parent <a href=\\"/material-ui/api/tabs/\\"><code>Tabs</code></a> has <code>textColor=\\"primary\\"</code>"},"textColorSecondary":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"the parent <a href=\\"/material-ui/api/tabs/\\"><code>Tabs</code></a> has <code>textColor=\\"secondary\\"</code>"},"wrapped":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>wrapped={true}</code>"}}}')}},e=>{var o=o=>e(e.s=o);e.O(0,[46593,32952,91506,29803,67770,94865,8049,11907,7548,4208,15148,99831,22621,42625,94672,78968,33343,86331,15034,10536,60,90636,38792],()=>o(75585)),_N_E=e.O()}]);